import pandas as pd
from datetime import datetime 
import os

# Función para leer archivos CSV
def read_csv(file_path):
    return pd.read_csv(file_path)

# Definir funciones de filtrado
def filter_ads_views(ads_views, advertiser_ids):
    df = ads_views[ads_views['advertiser_id'].isin(advertiser_ids)]
    df = df[df['date'] == datetime.today().strftime('%Y-%m-%d')]
    return df

def filter_product_views(product_views, advertiser_ids):
    advertisers = advertiser_ids['advertiser_id'].tolist()
    df = product_views[product_views['advertiser_id'].isin(advertisers)]
    df = df[df['date'] == datetime.today().strftime('%Y-%m-%d')]
    return df

# Función para guardar los archivos filtrados en el sistema local de EC2
def save_to_ec2(df, output_path):
    # Asegurarse de que la carpeta existe
    os.makedirs(os.path.dirname(output_path), exist_ok=True)
    df.to_csv(output_path, index=False)

# Nombre de los archivos de entrada
ads_views_file = '/path/to/ads_views.csv'  # Cambia esta ruta a la correcta
advertiser_ids_file = '/path/to/advertiser_ids.csv'  # Cambia esta ruta a la correcta
product_views_file = '/path/to/product_views.csv'  # Cambia esta ruta a la correcta

# Cargar los archivos CSV
ads_views = read_csv(ads_views_file)
advertiser_ids = read_csv(advertiser_ids_file)
product_views = read_csv(product_views_file)

# Filtrar los datos
ads_views_filtered = filter_ads_views(ads_views, advertiser_ids)
product_views_filtered = filter_product_views(product_views, advertiser_ids)

# Guardar los resultados filtrados en el sistema de archivos local de EC2
output_ads_views_path = '/home/ubuntu/Trabajo-Practico-MLOPS/Datos_filtrados/ads_views_filtered.csv'  # Cambia esta ruta si es necesario
output_product_views_path = '/home/ubuntu/Trabajo-Practico-MLOPS/Datos_filtrados/product_views_filtered.csv'  # Cambia esta ruta si es necesario

save_to_ec2(ads_views_filtered, output_ads_views_path)
save_to_ec2(product_views_filtered, output_product_views_path)

print("Archivos filtrados guardados en EC2.")
